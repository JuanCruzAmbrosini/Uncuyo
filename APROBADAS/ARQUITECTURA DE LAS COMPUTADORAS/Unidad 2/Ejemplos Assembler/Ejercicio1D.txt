;1. Mediante el software de simulación http://schweigi.github.io/assembler-simulator/
;a) Programa que que sume dos datos
;b) Implementar un programa que realice la suma y la resta con dos    ;     datos almacenado en memoria.
;c) Escribir un programa que compare dos números. Si son iguales el   ;     programa debe finalizar y si son distintos los debe sumar.
;d) Un programa que lea un dato e indique si es par o impar.
;e) Programa que indique el funcionamiento de el stack. (pila)


;d)

jmp start
variablePar:
	db "Es Par"
	db 0
variableImpar:
	db "No es Par"
	db 0
start:
	mov [0x50], 0x08
	mov [0x51], 0x02
	mov A, [0x50]
	mov D, 232
loop:
	sub A,[0x51]
	cmp A,1
	jz loopImpar
	cmp A,0
	jz loopPar
	jmp loop
loopPar:
	mov C, variablePar
	jmp loopEscribir
loopImpar:
	mov C, variableImpar
loopEscribir:
	MOV A, [C]	; Get char from var
	MOV [D], A	; Write to output
	inc C
	inc D
	CMP B, [C]	; Check if end
	JNZ loopEscribir	; jump if not
end:
	hlt